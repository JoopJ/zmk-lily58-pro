/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>

/ {
    macros {
        leftAlt: leftAlt {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LEFT_ALT &kp LEFT>;
            label = "LEFTALT";
        };

        rightAlt: rightAlt {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LEFT_ALT &kp RIGHT>;
            label = "RIGHTALT";
        };

        paste: paste {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LCTRL &kp V>;
            label = "PASTE";
        };

        copy: copy {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LCTRL &kp C>;
            label = "COPY";
        };

        leftCommandLeftSquareBracket: leftCommandLeftSquareBracket {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LEFT_COMMAND &kp LEFT_BRACKET>;
            label = "LEFTCOMMANDLEFTSQUAREBRACKET";
        };

        commandAltRightBracket: commandAltRightBracket {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LEFT_COMMAND &kp RIGHT_BRACKET>;
            label = "COMMANDALTRIGHTBRACKET";
        };

        commandAltLeftCurlyBracket: commandAltLeftCurlyBracket {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LEFT_COMMAND &kp LEFT_BRACE>;
            label = "COMMANDALTLEFTCURLYBRACKET";
        };

        commandRightCurlyBracket: commandRightCurlyBracket {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LEFT_COMMAND &kp RIGHT_BRACE>;
            label = "COMMANDRIGHTCURLYBRACKET";
        };

        SnipTool: SnipTool {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LEFT_COMMAND &kp LEFT_SHIFT &kp S>;
            label = "SNIPTOOL";
        };

        NewTerminal: NewTerminal {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LCTRL &kp LEFT_ALT &kp T>;
            label = "NEWTERMINAL";
        };

        OpenTaskManager: OpenTaskManager {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LCTRL &kp LEFT_SHIFT &kp ESC>;
            label = "OPENTASKMANAGER";
        };
    };

    behaviors {
        MomentaryLayerHold: MomentaryLayerHold {
            compatible = "zmk,behavior-hold-tap";
            label = "MOMENTARYLAYERHOLD";
            bindings = <&mo>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <800>;
            quick-tap-ms = <500>;
            require-prior-idle-ms = <250>;
            flavor = "balanced";
            hold-while-undecided;
        };

        TwoKeys: TwoKeys {
            compatible = "zmk,behavior-hold-tap";
            label = "TWOKEYS";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            hold-while-undecided;
            tapping-term-ms = <1250>;
            flavor = "tap-preferred";
            quick-tap-ms = <400>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            bindings = <
&kp ESC                        &kp N1  &kp N2  &kp N3     &kp N4                   &kp N5                                                                                       &kp N6                        &kp N7                    &kp N8     &kp N9   &kp N0    &kp PLUS
&MomentaryLayerHold 2 LS(TAB)  &kp Q   &kp W   &kp E      &kp R                    &kp T                                                                                        &kp Y                         &kp U                     &kp I      &kp O    &kp P     &MomentaryLayerHold 2 MINUS
&MomentaryLayerHold 1 ENTER    &kp A   &kp S   &kp D      &kp F                    &kp G                                                                                        &kp H                         &kp J                     &kp K      &kp L    &kp SEMI  &MomentaryLayerHold 1 ENTER
&kp LEFT_SHIFT                 &kp Z   &kp X   &kp C      &kp V                    &kp B                            &NewTerminal                   &OpenTaskManager             &kp N                         &kp M                     &kp COMMA  &kp DOT  &kp FSLH  &kp RIGHT_SHIFT
                                               &kp RCTRL  &TwoKeys LEFT_ALT ENTER  &TwoKeys LEFT_COMMAND BACKSPACE  &MomentaryLayerHold 1 SPACE    &MomentaryLayerHold 1 SPACE  &TwoKeys RIGHT_GUI BACKSPACE  &TwoKeys RIGHT_ALT ENTER  &kp RCTRL
            >;

            sensor-bindings = <&inc_dec_kp C_VOL_UP C_VOL_DN>;
        };

        lower_layer {
            bindings = <
&kp TILDE                     &leftCommandLeftSquareBracket  &commandAltRightBracket  &commandAltLeftCurlyBracket    &commandRightCurlyBracket  &kp HOME                                    &kp HOME                    &kp K_PREV              &kp K_NEXT          &trans     &kp K_MUTE        &kp K_VOLUME_UP
&kp GRAVE                     &none                          &leftAlt                 &kp UP_ARROW                   &rightAlt                  &kp PG_UP                                   &kp PG_UP                   &kp F8                  &kp UP_ARROW        &kp F10    &kp K_PLAY_PAUSE  &kp K_VOLUME_DOWN
&none                         &none                          &kp DOWN                 &kp DOWN                       &kp RIGHT                  &kp PAGE_DOWN                               &kp PG_DN                   &kp LEFT                &kp DOWN            &kp RIGHT  &none             &none
&TwoKeys CAPSLOCK LEFT_SHIFT  &kp LEFT_BRACKET               &kp RIGHT_BRACKET        &kp LEFT_BRACE                 &kp RIGHT_BRACE            &kp END                    &copy    &paste  &kp END                     &kp PIPE                &kp SEMICOLON       &kp COLON  &kp BACKSLASH     &TwoKeys CAPSLOCK RIGHT_SHIFT
                                                                                      &TwoKeys RIGHT_CONTROL ESCAPE  &TwoKeys LEFT_ALT TAB      &TwoKeys LEFT_COMMAND DEL  &none    &none   &TwoKeys RIGHT_COMMAND DEL  &TwoKeys RIGHT_ALT TAB  &TwoKeys RCTRL ESC
            >;

            sensor-bindings = <&inc_dec_kp C_VOL_UP C_VOL_DN>;
        };

        raise_layer {
            bindings = <
&trans          &kp F1   &kp F2   &kp F3            &kp F4        &kp F5                                    &trans             &kp KP_NUMBER_7  &kp KP_NUMBER_8    &kp KP_NUMBER_9  &kp PLUS      &none
&none           &kp F6   &kp F7   &kp F8            &kp F9        &kp F10                                   &none              &kp KP_NUMBER_4  &kp KP_NUMBER_5    &kp KP_NUMBER_6  &kp MINUS     &none
&none           &kp F11  &kp F12  &kp F13           &kp F14       &kp F15                                   &none              &kp KP_NUMBER_1  &kp KP_NUMBER_2    &kp KP_NUMBER_3  &kp ASTERISK  &none
&kp LEFT_SHIFT  &none    &none    &none             &SnipTool     &kp PRINTSCREEN   &copy        &paste     &none              &none            &kp KP_NUMBER_0    &kp PERIOD       &kp SLASH     &kp RIGHT_SHIFT
                                  &kp LEFT_CONTROL  &kp LEFT_ALT  &kp LEFT_COMMAND  &kp SPACE    &kp SPACE  &kp RIGHT_COMMAND  &kp RIGHT_ALT    &kp RIGHT_CONTROL
            >;

            sensor-bindings = <&inc_dec_kp C_VOL_UP C_VOL_DN>;
        };
    };
};
